#pragma once
#include <lua/cstddef>

#ifdef LUA_CPP_COMPILER
extern "C" {
    void putchar(char);
}
#else
extern "C" {
    #include <stdio.h>
}
#endif

namespace std {
    void print(const char *);
    void print(int);
    template<typename T>
    void print(T*);
    void printhex(int);

    template<typename T>
    void println(T v) {
        print(v);
        putchar('\n');
    }

    void print(const char *s) {
        while (*s) {
            putchar(*s);
            s ++;
        }
    }

    void print_hex(long x) {
        if (x >= 16) {
            print_hex(x / 16);
        }
        char val = x % 16;
        if (val >= 10) {
            putchar('a' + val - 10);
        }
        else {
            putchar('0' + val);
        }
    }

    template<typename T>
    void print(T* x) {
        putchar('0');
        putchar('x');
        print_hex((long) x);
    }

    void print(int x) {
        if (x < 0) {
            putchar('-');
            x *= -1;
        }
        if (x >= 10) {
            print(x / 10);
        }
        putchar('0' + (x % 10));
    }
}
